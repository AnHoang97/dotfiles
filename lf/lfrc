# Basic vars

set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons 1
set period 1
set preview 1
set previewer ~/.config/lf/pv.sh
set ignorecase 1

# remaps
map D delete 

map c
map cc cd ~/.config
map cd push :cd<space>
map cf fzf
map ci cd ~/iCloud
map co cd ~/Documents
map cp cd ~/Projects
map cs cd ~/iCloud/School
map cw cd ~/Downloads

map o %open $f 

map p
map pl soft_link
map pp paste

map x $$f 

map y
map yf %basename $f | pbcopy
map yg push :glob-select<space>
map yn %echo $f | pbcopy
map yp %dirname $f | pbcopy
map yy :copy

# custom commands
cmd touch %touch "$(echo $* | tr ' ' '\ ')"
cmd mkdir %mkdir "$(echo $* | tr ' ' '\ ')"
cmd open_with $$* $f
cmd open_all $open $fx
cmd visual %$VISUAL .

cmd mkfile ${{
	$EDITOR $1
}}

cmd bulk-rename ${{
	index=$(mktemp /tmp/lf-bulk-rename-index.XXXXXXXXXX)
	if [ -n "${fs}" ]; then
		echo "$fs" > $index
	else
		echo "$(ls "$(dirname $f)" | tr ' ' "\n")" > $index
	fi
	index_edit=$(mktemp /tmp/lf-bulk-rename.XXXXXXXXXX)
	cat $index > $index_edit
	$EDITOR $index_edit
	if [ $(cat $index | wc -l) -eq $(cat $index_edit | wc -l) ]; then
		max=$(($(cat $index | wc -l)+1))
		counter=1
		while [ $counter -le $max ]; do
			a="$(cat $index | sed "${counter}q;d")"
			b="$(cat $index_edit | sed "${counter}q;d")"
			counter=$(($counter+1))
			
			[ "$a" = "$b" ] && continue
			[ -e "$b" ] && echo "File exists: $b" && continue
			mv "$a" "$b"
		done
	else
		echo "Number of lines must stay the same"
	fi
	rm $index $index_edit
}}

# compress current file or selected files with zip
cmd zip ${{
	set -f
	mkdir $1
	cp -r $fx $1
	zip -r $1.zip $1
	rm -rf $1
}}


# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd soft_link ${{
	set -f
	ln -s $(realpath $fx) "$( pwd )"
}}

cmd test ${{
	echo $f >> test.test
	echo $fs >> test.test
	echo $fx >> test.test
	echo $id >> test.test
}}

cmd fzf ${{
  res="$(find ${1:-.} 2> /dev/null | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}
